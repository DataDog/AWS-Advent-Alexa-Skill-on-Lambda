#!/usr/bin/env babel-node

// import fs from 'fs';
import path from 'path';
import lambda from 'node-aws-lambda';
// import nomnom from 'nomnom';

// const exists = (filename) => fs.existsSync(filename) ? undefined : `${filename} does not exist`;
// const requireFile = (transform = i => i) => (filename) => transform(require(path.join(process.cwd(), filename)));


// const { config, zip } = nomnom
//                           .script('deploy')
//                           .option('config', { required: true, callback: exists, transform: requireFile(_ => _.default) })
//                           .option('package', { required: true, callback: exists })
//                           .parse();
// console.log();
const zip = path.join(process.cwd(), 'build/package.zip');
const config = require(path.join(process.cwd(), 'config/lambda.config.js'));
console.log(config);
lambda.deploy(zip, config, function(error) {
  if (error) {
    console.error('Deployment failed:', error);
    process.exit(1);
  } else {
    console.info('Deployment successful');
    process.exit(0);
  }
});
